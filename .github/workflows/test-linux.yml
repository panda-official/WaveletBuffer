name: Compile project and run C++ tests [Linux]
on:
  push:
    branches: [main, stable, develop]
    tags:
      - 'v*'
  pull_request:
    branches: [main, stable, develop]
jobs:
  cpplint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install cpplint
        run: pip3 install cpplint
      - name: Run cpplint
        run: find {benchmarks,tests,sources,wavelet_buffer,examples}/ -name "*.cc" -o -name "*.h" | xargs cpplint
  build_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [ Debug, Release ]
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get install libopenblas-dev
          sudo apt-get install libjpeg-dev
          sudo apt-get install nlohmann-json3-dev
          git clone https://bitbucket.org/blaze-lib/blaze.git --depth=1 --branch=v3.8.1 && cd blaze && cmake -DCMAKE_INSTALL_PREFIX=/usr/local/ . && sudo make install
          git clone https://github.com/USCiLab/cereal --depth=1 --branch=v1.3.2 && cd cereal && cmake -DCMAKE_INSTALL_PREFIX=/usr/local/ -DJUST_INSTALL_CEREAL=ON . && sudo make install
      - name: Build tests, benchmarks and examples
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DWB_BUILD_TESTS=ON -DWB_BUILD_BENCHMARKS=ON -DWB_BUILD_EXAMPLES=ON ..
          cmake --build .
      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure
      - name: Install wavelet_buffer
        run: |
          cd build
          sudo cmake --install .
      - name: Check cmake target installation
        run: cmake --find-package -DNAME=wavelet_buffer -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST
  conan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install conan
        run: pip3 install conan
      - name: Create profile
        run: |
          cd conan
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
      - name: Build package for stable channel
        if: github.ref_type == 'tag'
        run: |
          cd conan
          CONAN_SOURCE_DIR=`pwd`/.. conan create . drift/stable
      - name: Build package for develop channel
        if: github.ref_type == 'branch'
        run: |
          cd conan
          CONAN_SOURCE_DIR=`pwd`/.. conan create . drift/develop
      - name: Upload package
        if: ${{ (github.ref == 'refs/heads/develop') || (startsWith(github.event.ref, 'refs/tags/v')) }}
        run: |
          conan remote add panda https://conan.panda.technology/artifactory/api/conan/drift
          conan user -p ${{secrets.CONAN_PASSWORD}} -r panda --skip-auth ${{secrets.CONAN_LOGIN_USERNAME}}
          conan upload wavelet_buffer --all --confirm --remote=panda